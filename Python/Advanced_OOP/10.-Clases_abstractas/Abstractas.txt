Una clase abstracta debe considerarse un modelo para otras clases, una especie de contrato entre un
diseñador de clases y un programador:
-El diseñador de clases establece requisitos con respecto a los métodos que deben implementarse
    simplemente declarándolos, pero sin definirlos en detalle. Estos métodos se denominan métodos abstractos.
-El programador tiene que entregar todas las definiciones de métodos y la integridad sería validada por otro
    módulo dedicado. El programador entrega las definiciones de método anulando las declaraciones de método recibidas
    # del diseñador de clases.

¿Por qué queremos usar clases abstractas?
La razón muy importante es: queremos que nuestro código sea polimórfico, por lo que todas las subclases
tienen que entregar un conjunto de sus propias implementaciones de métodos para poder llamarlas usando nombres
de métodos comunes. Además, una clase que contiene uno o más métodos abstractos se llama clase abstracta.
Esto significa que las clases abstractas no se limitan a contener solo métodos abstractos;
Algunos de los métodos ya se pueden definir, pero si alguno de los métodos es abstracto, entonces la clase se
vuelve abstracta.

¿Qué es un método abstracto?
Un método abstracto es un método que tiene una declaración, pero no tiene ninguna implementación.